import { useParams, useNavigate } from "react-router-dom";
import { useState, useEffect } from "react";
import { supabase } from "@/integrations/supabase/client";
import { Header } from "@/components/Header";
import { Footer } from "@/components/Footer";
import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Progress } from "@/components/ui/progress";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { useToast } from "@/hooks/use-toast";
import type { Session } from "@supabase/supabase-js";
import {
  ArrowLeft,
  Heart,
  Share2,
  ShoppingCart,
  TrendingUp,
  Clock,
  User,
  ShoppingBag,
  DollarSign,
  TrendingDown,
} from "lucide-react";
import {
  LineChart,
  Line,
  BarChart,
  Bar,
  XAxis,
  YAxis,
  CartesianGrid,
  Tooltip,
  ResponsiveContainer,
  Legend,
} from "recharts";
import { CardHeader, CardTitle } from "@/components/ui/card";
import nftBoxImage from "@/assets/nft-box.jpg";

const rarityColors = {
  Common: "bg-gray-500/20 text-gray-300",
  Rare: "bg-blue-500/20 text-blue-300",
  Epic: "bg-purple-500/20 text-purple-300",
  Legendary: "bg-yellow-500/20 text-yellow-300",
  Mythic: "bg-pink-500/20 text-pink-300",
  Divine: "bg-red-500/20 text-red-300",
};

// Financial data for other NFTs
const revenueData = [
  { month: "T1", revenue: 45000, expenses: 32000, profit: 13000 },
  { month: "T2", revenue: 52000, expenses: 35000, profit: 17000 },
  { month: "T3", revenue: 48000, expenses: 33000, profit: 15000 },
  { month: "T4", revenue: 61000, expenses: 38000, profit: 23000 },
  { month: "T5", revenue: 58000, expenses: 36000, profit: 22000 },
  { month: "T6", revenue: 67000, expenses: 40000, profit: 27000 },
];

const performanceData = [
  { month: "T1", roi: 12.5 },
  { month: "T2", roi: 15.8 },
  { month: "T3", roi: 14.2 },
  { month: "T4", roi: 18.9 },
  { month: "T5", roi: 17.6 },
  { month: "T6", roi: 21.3 },
];

export default function NFTDetail() {
  const { id } = useParams();
  const navigate = useNavigate();
  const { toast } = useToast();
  const [session, setSession] = useState<Session | null>(null);
  const [purchaseAmount, setPurchaseAmount] = useState<string>("1");

  useEffect(() => {
    supabase.auth.getSession().then(({ data: { session } }) => {
      setSession(session);
    });

    const {
      data: { subscription },
    } = supabase.auth.onAuthStateChange((_event, session) => {
      setSession(session);
    });

    return () => subscription.unsubscribe();
  }, []);

  const handleSignOut = async () => {
    await supabase.auth.signOut();
  };

  // Check if it's an "other" type NFT (id >= 5)
  const isOtherNFT = parseInt(id || "0") >= 5;

  // Mock NFT data - in real app, fetch from API
  const nft = {
    id,
    name: isOtherNFT ? "Cyber Punk #4231" : "Gold Tier NFT #1523",
    image: nftBoxImage,
    price: isOtherNFT ? "2.5 ETH" : "0.8 ETH",
    usdPrice: isOtherNFT ? "$5,250" : "$1,680",
    rarity: isOtherNFT ? "Divine" : "Legendary",
    type: isOtherNFT ? "other" : "tier",
    seller: "0x1234...5678",
    owner: "CryptoCollector",
    likes: 892,
    views: 3421,
    description: isOtherNFT
      ? "M·ªôt t√°c ph·∫©m ngh·ªá thu·∫≠t k·ªπ thu·∫≠t s·ªë ƒë·ªôc ƒë√°o, ƒë∆∞·ª£c t·∫°o ra b·ªüi ngh·ªá sƒ© n·ªïi ti·∫øng. NFT n√†y mang phong c√°ch Cyber Punk hi·ªán ƒë·∫°i v·ªõi c√°c chi ti·∫øt tinh t·∫ø v√† m√†u s·∫Øc s·ªëng ƒë·ªông."
      : "NFT h·∫°ng Gold mang ƒë·∫øn ƒë·∫∑c quy·ªÅn cao c·∫•p trong h·ªá sinh th√°i. ƒê∆∞·ª£c b√°n m·ªôt l·∫ßn cho to√†n b·ªô NFT h·∫°ng n√†y v·ªõi quy·ªÅn l·ª£i v√† l·ª£i √≠ch ƒë·∫∑c bi·ªát.",
    // For other NFTs
    totalValue: "250 ETH",
    pricePerShare: "2.5 ETH",
    sharesSold: 67,
    totalShares: 100,
    purchases: 892,
    attributes: [
      { trait: "Background", value: "Neon City", rarity: "15%" },
      { trait: "Character", value: "Warrior", rarity: "8%" },
      { trait: "Outfit", value: "Cyber Suit", rarity: "12%" },
      { trait: "Weapon", value: "Laser Blade", rarity: "5%" },
      { trait: "Accessory", value: "VR Visor", rarity: "20%" },
    ],
    history: [
      {
        event: "Listed",
        price: isOtherNFT ? "2.5 ETH" : "0.8 ETH",
        from: "0x1234...5678",
        date: "2 gi·ªù tr∆∞·ªõc",
      },
      {
        event: "Transferred",
        from: "0xabcd...efgh",
        to: "0x1234...5678",
        date: "1 ng√†y tr∆∞·ªõc",
      },
      {
        event: "Minted",
        price: isOtherNFT ? "0.1 ETH" : "0.5 ETH",
        from: "0x0000...0000",
        date: "7 ng√†y tr∆∞·ªõc",
      },
    ],
  };

  const progressPercentage = (nft.sharesSold / nft.totalShares) * 100;

  const handlePurchase = () => {
    if (!session) {
      toast({
        title: "C·∫ßn ƒëƒÉng nh·∫≠p",
        description: "Vui l√≤ng ƒëƒÉng nh·∫≠p ƒë·ªÉ mua NFT",
        variant: "destructive",
      });
      navigate("/auth");
      return;
    }

    if (isOtherNFT) {
      const shares = parseInt(purchaseAmount) || 1;
      const totalPrice = (parseFloat(nft.pricePerShare.split(" ")[0]) * shares).toFixed(2);
      
      toast({
        title: "ƒêang x·ª≠ l√Ω giao d·ªãch",
        description: `ƒêang mua ${shares} c·ªï ph·∫ßn (${totalPrice} ETH)`,
      });

      setTimeout(() => {
        toast({
          title: "Mua th√†nh c√¥ng!",
          description: `B·∫°n ƒë√£ mua ${shares} c·ªï ph·∫ßn c·ªßa ${nft.name}`,
        });
      }, 2000);
    } else {
      toast({
        title: "ƒêang x·ª≠ l√Ω giao d·ªãch",
        description: `ƒêang mua ${nft.name} v·ªõi gi√° ${nft.price}`,
      });

      setTimeout(() => {
        toast({
          title: "Mua th√†nh c√¥ng!",
          description: `B·∫°n ƒë√£ s·ªü h·ªØu ${nft.name}`,
        });
      }, 2000);
    }
  };

  return (
    <div className="min-h-screen bg-background">
      <Header session={session} onSignOut={handleSignOut} />

      <main className="container mx-auto px-4 pt-24 pb-12">
        <Button
          variant="ghost"
          className="mb-6"
          onClick={() => navigate("/nft-market")}
        >
          <ArrowLeft className="w-4 h-4 mr-2" />
          Quay l·∫°i
        </Button>

        <div className="grid grid-cols-1 lg:grid-cols-2 gap-8 mb-12">
          {/* Image */}
          <div className="space-y-4">
            <div className="relative aspect-square rounded-2xl overflow-hidden glass">
              <img
                src={nft.image}
                alt={nft.name}
                className="w-full h-full object-cover"
              />
              <div className="absolute top-4 right-4 flex gap-2">
                <Button
                  size="icon"
                  variant="secondary"
                  className="rounded-full glass backdrop-blur-xl"
                >
                  <Heart className="w-5 h-5" />
                </Button>
                <Button
                  size="icon"
                  variant="secondary"
                  className="rounded-full glass backdrop-blur-xl"
                >
                  <Share2 className="w-5 h-5" />
                </Button>
              </div>
              {!isOtherNFT && (
                <div className="absolute top-4 left-4">
                  <Badge className="bg-primary/90 text-white">
                    üèÜ B√°n 1 l·∫ßn
                  </Badge>
                </div>
              )}
            </div>

            {/* Stats */}
            <div className="glass rounded-xl p-4 grid grid-cols-3 gap-4">
              <div className="text-center">
                <div className="text-2xl font-bold">{nft.views}</div>
                <div className="text-xs text-muted-foreground">L∆∞·ª£t xem</div>
              </div>
              <div className="text-center">
                <div className="text-2xl font-bold">{nft.likes}</div>
                <div className="text-xs text-muted-foreground">Y√™u th√≠ch</div>
              </div>
              <div className="text-center">
                <div className="text-2xl font-bold">
                  {isOtherNFT ? nft.purchases : "1"}
                </div>
                <div className="text-xs text-muted-foreground">
                  {isOtherNFT ? "L∆∞·ª£t mua" : "S·ªü h·ªØu"}
                </div>
              </div>
            </div>
          </div>

          {/* Details */}
          <div className="space-y-6">
            <div>
              <div className="flex items-center gap-3 mb-2">
                <h1 className="text-4xl font-bold">{nft.name}</h1>
                <Badge
                  className={
                    rarityColors[nft.rarity as keyof typeof rarityColors]
                  }
                >
                  {nft.rarity}
                </Badge>
              </div>
              <p className="text-muted-foreground">{nft.description}</p>
            </div>

            {/* Owner & Seller */}
            <div className="glass rounded-xl p-4 grid grid-cols-2 gap-4">
              <div className="flex items-center gap-3">
                <div className="w-10 h-10 rounded-full bg-primary/20 flex items-center justify-center">
                  <User className="w-5 h-5 text-primary" />
                </div>
                <div>
                  <div className="text-xs text-muted-foreground">
                    Ch·ªß s·ªü h·ªØu
                  </div>
                  <div className="font-semibold">{nft.owner}</div>
                </div>
              </div>
              <div className="flex items-center gap-3">
                <div className="w-10 h-10 rounded-full bg-primary/20 flex items-center justify-center">
                  <User className="w-5 h-5 text-primary" />
                </div>
                <div>
                  <div className="text-xs text-muted-foreground">
                    Ng∆∞·ªùi b√°n
                  </div>
                  <div className="font-mono text-sm">{nft.seller}</div>
                </div>
              </div>
            </div>

            {/* Price & Buy */}
            <div className="glass rounded-xl p-6">
              {isOtherNFT ? (
                <>
                  <div className="space-y-3 mb-4">
                    <div className="flex justify-between">
                      <span className="text-sm text-muted-foreground">
                        Gi√° tr·ªã t·ªïng
                      </span>
                      <span className="text-xl font-bold gradient-text">
                        {nft.totalValue}
                      </span>
                    </div>
                    <div className="flex justify-between">
                      <span className="text-sm text-muted-foreground">
                        Gi√°/c·ªï ph·∫ßn
                      </span>
                      <span className="text-lg font-semibold">
                        {nft.pricePerShare}
                      </span>
                    </div>

                    {/* Progress */}
                    <div className="space-y-2 pt-2">
                      <div className="flex justify-between text-xs text-muted-foreground">
                        <span>Ti·∫øn tr√¨nh b√°n</span>
                        <span>
                          {nft.sharesSold}/{nft.totalShares} c·ªï ph·∫ßn
                        </span>
                      </div>
                      <Progress value={progressPercentage} className="h-3" />
                      <div className="text-sm text-primary font-semibold">
                        {progressPercentage.toFixed(1)}% ƒë√£ b√°n
                      </div>
                    </div>
                  </div>

                  {/* Purchase form for shares */}
                  <div className="mb-4">
                    <Label htmlFor="shares">S·ªë c·ªï ph·∫ßn mu·ªën mua</Label>
                    <Input
                      id="shares"
                      type="number"
                      min="1"
                      max={nft.totalShares - nft.sharesSold}
                      value={purchaseAmount}
                      onChange={(e) => setPurchaseAmount(e.target.value)}
                      className="mt-2"
                      placeholder="1"
                    />
                    <p className="text-xs text-muted-foreground mt-1">
                      T·ªïng: {(parseFloat(nft.pricePerShare.split(" ")[0]) * (parseInt(purchaseAmount) || 1)).toFixed(2)} ETH
                    </p>
                  </div>

                  <div className="flex gap-3">
                    <Button
                      variant="gradient"
                      size="lg"
                      className="flex-1 gap-2"
                      onClick={handlePurchase}
                    >
                      <ShoppingBag className="w-5 h-5" />
                      Mua c·ªï ph·∫ßn
                    </Button>
                  </div>
                </>
              ) : (
                <>
                  <div className="mb-4">
                    <div className="text-sm text-muted-foreground mb-1">
                      Gi√° hi·ªán t·∫°i
                    </div>
                    <div className="flex items-baseline gap-3">
                      <div className="text-4xl font-bold gradient-text">
                        {nft.price}
                      </div>
                      <div className="text-xl text-muted-foreground">
                        {nft.usdPrice}
                      </div>
                    </div>
                  </div>

                  <div className="mb-4 p-3 bg-primary/10 rounded-lg">
                    <p className="text-sm text-muted-foreground">
                      üíé NFT h·∫°ng n√†y ƒë∆∞·ª£c b√°n m·ªôt l·∫ßn cho to√†n b·ªô quy·ªÅn s·ªü h·ªØu
                    </p>
                  </div>

                  <div className="flex gap-3">
                    <Button
                      variant="gradient"
                      size="lg"
                      className="flex-1 gap-2"
                      onClick={handlePurchase}
                    >
                      <ShoppingCart className="w-5 h-5" />
                      Mua ngay
                    </Button>
                  </div>
                </>
              )}
            </div>

            {/* Attributes */}
            <div className="glass rounded-xl p-6">
              <h3 className="text-xl font-bold mb-4">Thu·ªôc t√≠nh</h3>
              <div className="grid grid-cols-2 gap-3">
                {nft.attributes.map((attr) => (
                  <div
                    key={attr.trait}
                    className="bg-muted/20 rounded-lg p-3 text-center"
                  >
                    <div className="text-xs text-muted-foreground mb-1">
                      {attr.trait}
                    </div>
                    <div className="font-semibold">{attr.value}</div>
                    <div className="text-xs text-primary mt-1">
                      {attr.rarity} ƒë·ªô hi·∫øm
                    </div>
                  </div>
                ))}
              </div>
            </div>

            {/* History */}
            <div className="glass rounded-xl p-6">
              <h3 className="text-xl font-bold mb-4">L·ªãch s·ª≠ giao d·ªãch</h3>
              <div className="space-y-3">
                {nft.history.map((item, index) => (
                  <div
                    key={index}
                    className="flex items-center justify-between py-3 border-b border-border/50 last:border-0"
                  >
                    <div className="flex items-center gap-3">
                      <Clock className="w-4 h-4 text-muted-foreground" />
                      <div>
                        <div className="font-semibold">{item.event}</div>
                        <div className="text-xs text-muted-foreground">
                          {item.from}
                          {item.to && ` ‚Üí ${item.to}`}
                        </div>
                      </div>
                    </div>
                    <div className="text-right">
                      <div className="font-semibold">{item.price || "-"}</div>
                      <div className="text-xs text-muted-foreground">
                        {item.date}
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </div>
        </div>

        {/* Financial Report for Other NFTs */}
        {isOtherNFT && (
          <div className="space-y-8">
            <div className="text-center mb-8">
              <h2 className="text-3xl font-bold mb-2 gradient-text">
                B√°o c√°o t√†i ch√≠nh
              </h2>
              <p className="text-muted-foreground">
                Th√¥ng tin chi ti·∫øt v·ªÅ doanh thu v√† l·ª£i nhu·∫≠n c·ªßa NFT
              </p>
            </div>

            {/* Key Metrics */}
            <div className="grid grid-cols-1 md:grid-cols-4 gap-6">
              <Card className="glass">
                <CardContent className="p-6">
                  <div className="flex items-center gap-3 mb-2">
                    <DollarSign className="w-8 h-8 text-primary" />
                    <div>
                      <p className="text-sm text-muted-foreground">
                        Doanh thu TB
                      </p>
                      <p className="text-2xl font-bold">$55.2K</p>
                    </div>
                  </div>
                  <p className="text-xs text-primary flex items-center gap-1">
                    <TrendingUp className="w-3 h-3" />
                    +12.5% t·ª´ th√°ng tr∆∞·ªõc
                  </p>
                </CardContent>
              </Card>

              <Card className="glass">
                <CardContent className="p-6">
                  <div className="flex items-center gap-3 mb-2">
                    <TrendingUp className="w-8 h-8 text-secondary" />
                    <div>
                      <p className="text-sm text-muted-foreground">L·ª£i nhu·∫≠n TB</p>
                      <p className="text-2xl font-bold">$19.5K</p>
                    </div>
                  </div>
                  <p className="text-xs text-secondary flex items-center gap-1">
                    <TrendingUp className="w-3 h-3" />
                    +18.3% t·ª´ th√°ng tr∆∞·ªõc
                  </p>
                </CardContent>
              </Card>

              <Card className="glass">
                <CardContent className="p-6">
                  <div className="flex items-center gap-3 mb-2">
                    <TrendingDown className="w-8 h-8 text-accent" />
                    <div>
                      <p className="text-sm text-muted-foreground">Chi ph√≠ TB</p>
                      <p className="text-2xl font-bold">$35.7K</p>
                    </div>
                  </div>
                  <p className="text-xs text-accent flex items-center gap-1">
                    <TrendingUp className="w-3 h-3" />
                    +8.2% t·ª´ th√°ng tr∆∞·ªõc
                  </p>
                </CardContent>
              </Card>

              <Card className="glass">
                <CardContent className="p-6">
                  <div className="flex items-center gap-3 mb-2">
                    <DollarSign className="w-8 h-8 text-primary" />
                    <div>
                      <p className="text-sm text-muted-foreground">ROI TB</p>
                      <p className="text-2xl font-bold">16.7%</p>
                    </div>
                  </div>
                  <p className="text-xs text-primary flex items-center gap-1">
                    <TrendingUp className="w-3 h-3" />
                    +2.1% t·ª´ th√°ng tr∆∞·ªõc
                  </p>
                </CardContent>
              </Card>
            </div>

            {/* Charts */}
            <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
              <Card className="glass">
                <CardHeader>
                  <CardTitle>Doanh thu & L·ª£i nhu·∫≠n (6 th√°ng)</CardTitle>
                </CardHeader>
                <CardContent>
                  <ResponsiveContainer width="100%" height={300}>
                    <BarChart data={revenueData}>
                      <CartesianGrid strokeDasharray="3 3" opacity={0.1} />
                      <XAxis dataKey="month" />
                      <YAxis />
                      <Tooltip
                        contentStyle={{
                          backgroundColor: "hsl(var(--background))",
                          border: "1px solid hsl(var(--border))",
                          borderRadius: "8px",
                        }}
                      />
                      <Legend />
                      <Bar dataKey="revenue" fill="hsl(var(--primary))" name="Doanh thu" />
                      <Bar dataKey="profit" fill="hsl(var(--secondary))" name="L·ª£i nhu·∫≠n" />
                    </BarChart>
                  </ResponsiveContainer>
                </CardContent>
              </Card>

              <Card className="glass">
                <CardHeader>
                  <CardTitle>ROI theo th·ªùi gian (%)</CardTitle>
                </CardHeader>
                <CardContent>
                  <ResponsiveContainer width="100%" height={300}>
                    <LineChart data={performanceData}>
                      <CartesianGrid strokeDasharray="3 3" opacity={0.1} />
                      <XAxis dataKey="month" />
                      <YAxis />
                      <Tooltip
                        contentStyle={{
                          backgroundColor: "hsl(var(--background))",
                          border: "1px solid hsl(var(--border))",
                          borderRadius: "8px",
                        }}
                      />
                      <Line
                        type="monotone"
                        dataKey="roi"
                        stroke="hsl(var(--primary))"
                        strokeWidth={3}
                        name="ROI %"
                      />
                    </LineChart>
                  </ResponsiveContainer>
                </CardContent>
              </Card>
            </div>

            {/* Financial Timeline */}
            <Card className="glass">
              <CardHeader>
                <CardTitle>D√≤ng th·ªùi gian t√†i ch√≠nh</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-6">
                  {revenueData.reverse().map((data, index) => (
                    <div key={index} className="relative pl-8 pb-6 border-l-2 border-primary/30 last:pb-0">
                      <div className="absolute left-[-9px] top-0 w-4 h-4 rounded-full bg-primary"></div>
                      <div className="glass rounded-lg p-4">
                        <div className="flex items-center justify-between mb-2">
                          <h4 className="font-bold">Th√°ng {data.month}</h4>
                          <Badge variant="outline">ƒê√£ ho√†n th√†nh</Badge>
                        </div>
                        <div className="grid grid-cols-3 gap-4 text-sm">
                          <div>
                            <p className="text-muted-foreground">Doanh thu</p>
                            <p className="font-bold text-primary">
                              ${data.revenue.toLocaleString()}
                            </p>
                          </div>
                          <div>
                            <p className="text-muted-foreground">Chi ph√≠</p>
                            <p className="font-bold text-accent">
                              ${data.expenses.toLocaleString()}
                            </p>
                          </div>
                          <div>
                            <p className="text-muted-foreground">L·ª£i nhu·∫≠n</p>
                            <p className="font-bold text-secondary">
                              ${data.profit.toLocaleString()}
                            </p>
                          </div>
                        </div>
                      </div>
                    </div>
                  ))}
                </div>
              </CardContent>
            </Card>
          </div>
        )}
      </main>

      <Footer />
    </div>
  );
}
